// <auto-generated />
using System;
using BlazeToDo_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazeToDo_API.Migrations
{
    [DbContext(typeof(DBToDO))]
    [Migration("20240414195404_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_bin")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("BlazeToDo_API.ToDo.CategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.ContaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("contacto")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Conta");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.ListaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Lista");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.NotificacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotificarAos")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TarefaId")
                        .HasColumnType("int");

                    b.Property<bool>("Visualizada")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("TarefaId");

                    b.ToTable("Notificacao");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.TarefaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Concluida")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("DataConclusao")
                        .HasColumnType("longtext");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("ListaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Prioridade")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContaId");

                    b.HasIndex("ListaId");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.CategoriaModel", b =>
                {
                    b.HasOne("BlazeToDo_API.ToDo.ContaModel", "Conta")
                        .WithMany("Categorias")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.ListaModel", b =>
                {
                    b.HasOne("BlazeToDo_API.ToDo.ContaModel", "Conta")
                        .WithMany("Listas")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.NotificacaoModel", b =>
                {
                    b.HasOne("BlazeToDo_API.ToDo.ContaModel", "Conta")
                        .WithMany("Notificacoes")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazeToDo_API.ToDo.TarefaModel", "Tarefa")
                        .WithMany()
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.TarefaModel", b =>
                {
                    b.HasOne("BlazeToDo_API.ToDo.CategoriaModel", "Categoria")
                        .WithMany("Tarefas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("BlazeToDo_API.ToDo.ContaModel", "Conta")
                        .WithMany("Tarefas")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazeToDo_API.ToDo.ListaModel", "Lista")
                        .WithMany("Tarefas")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Conta");

                    b.Navigation("Lista");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.CategoriaModel", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.ContaModel", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Listas");

                    b.Navigation("Notificacoes");

                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("BlazeToDo_API.ToDo.ListaModel", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
